{"version":3,"sources":["webpack://music_pc2-[name]/./src/components/Play.vue?443c","webpack://music_pc2-[name]/./src/components/Play.vue","webpack://music_pc2-[name]/src/components/Play.vue","webpack://music_pc2-[name]/./src/components/Play.vue?7bdb","webpack://music_pc2-[name]/./src/components/Play.vue?ec2d"],"names":["render","_vm","this","_c","_self","staticClass","staticStyle","on","$event","changePlayDetailState","class","disk__playing","isPlaying","ref","style","transform","stopMatrix","backgroundImage","coverUrl","attrs","control__playing","prev","onplay","next","progress__playing","_v","_s","currentPlay","name","s_to_hs","position","duration","width","progress","playUrl","isLoop","onupdate","getDuration","play","pause","end","staticRenderFns","data","playSong","watch","newval","changeCurrentLyric","getCurrentPlay","getCurrentPlayLyric","$refs","audio","currentTime","changePlaycurrentTime","changePlayTotalTime","methods","mapMutations","mapActions","playNextSong","nowPlay","playId","playPrevSong","console","log","changePlayState","setTimeout","id","lyric","_this$$refs$audio","_this$$refs$audio2","parseInt","currentLyric","computed","mapState","mapGetters","str","toFixed","component"],"mappings":"sIAAA,W,2CCAA,IAAIA,EAAS,WAAkB,IAAIC,EAAIC,KAAKC,EAAGF,EAAIG,MAAMD,GAAG,OAAOA,EAAG,MAAM,CAACE,YAAY,SAASC,YAAY,CAAC,MAAQ,UAAU,CAACH,EAAG,MAAM,CAACE,YAAY,cAAcE,GAAG,CAAC,MAAQ,SAASC,GAAQ,OAAOP,EAAIQ,uBAAsB,MAAS,CAACN,EAAG,MAAM,CAACE,YAAY,OAAOK,MAAM,CAAEC,cAAeV,EAAIW,YAAa,CAACT,EAAG,QAAQ,CAACU,IAAI,QAAQR,YAAY,aAAaS,MAAO,CAClWC,UAAWd,EAAIe,WACfC,gBAAiBhB,EAAIiB,SAAW,OAAOjB,EAAIiB,YAAc,IACxDC,MAAM,CAAC,IAAM,cAAchB,EAAG,MAAM,CAACE,YAAY,kBAAkB,CAACF,EAAG,MAAM,CAACE,YAAY,UAAUK,MAAM,CAAEU,iBAAkBnB,EAAIW,YAAa,CAACT,EAAG,MAAM,CAACE,YAAY,gCAAgCE,GAAG,CAAC,MAAQN,EAAIoB,OAAO,CAAClB,EAAG,IAAI,CAACE,YAAY,yBAAyBF,EAAG,MAAM,CAACE,YAAY,cAAcE,GAAG,CAAC,MAAQN,EAAIqB,SAAS,CAACnB,EAAG,IAAI,CAACO,MAAMT,EAAIW,UAAY,sBAAwB,yBAAyBT,EAAG,MAAM,CAACE,YAAY,gCAAgCE,GAAG,CAAC,MAAQN,EAAIsB,OAAO,CAACpB,EAAG,IAAI,CAACE,YAAY,8BAA8BF,EAAG,MAAM,CAACE,YAAY,mBAAmB,CAACF,EAAG,MAAM,CAACE,YAAY,WAAWK,MAAM,CAAEc,kBAAmBvB,EAAIW,YAAa,CAACT,EAAG,KAAK,CAACE,YAAY,kBAAkB,CAACJ,EAAIwB,GAAG,IAAIxB,EAAIyB,GAAGzB,EAAI0B,YAAc1B,EAAI0B,YAAYC,KAAO,UAAU,OAAOzB,EAAG,IAAI,CAACE,YAAY,iBAAiB,CAACJ,EAAIwB,GAAG,IAAIxB,EAAIyB,GAAGzB,EAAI4B,QAAQ5B,EAAI6B,WAAW,MAAM7B,EAAIyB,GAAGzB,EAAI4B,QAAQ5B,EAAI8B,WAAW,OAAO5B,EAAG,MAAM,CAACE,YAAY,iBAAiB,CAACF,EAAG,OAAO,CAACW,MAAO,CAAEkB,MAAO/B,EAAIgC,kBAAoB9B,EAAG,QAAQ,CAACU,IAAI,QAAQP,YAAY,CAAC,QAAU,QAAQa,MAAM,CAAC,IAAMlB,EAAIiC,QAAQ,KAAOjC,EAAIkC,OAAO,SAAWlC,EAAIW,WAAWL,GAAG,CAAC,WAAaN,EAAImC,SAAS,QAAUnC,EAAIoC,YAAY,KAAOpC,EAAIqC,KAAK,MAAQrC,EAAIsC,MAAM,MAAQtC,EAAIuC,UAE1sCC,EAAkB,G,wBC0EP,GAEfC,OACA,OAIA1B,WAAA,EAGAc,SAAA,EAEAC,SAAA,EAGAY,SAAA,KAGAC,MAAA,CAEA,iBAAAC,GAGA,KAAAC,mBAAA,IAGA,KAAAC,eAAAF,GAEA,KAAAG,oBAAAH,IAEA,yBAAAA,GACA,KAAAI,MAAAC,MAAAC,YAAAN,GAEAjC,UAAAiC,GACAA,EACA,KAAAI,MAAAC,MAAAZ,OAEA,KAAAW,MAAAC,MAAAX,SAGAT,SAAAe,GACA,KAAAO,sBAAA,KAAAtB,WAEAC,SAAAc,GACA,KAAAQ,oBAAA,KAAAtB,YAGAuB,QAAA,CACAzB,kBACA0B,eAAA,kJACAC,eAAA,8BACAA,eAAA,kDACAD,eAAA,gCAEAhC,OACA,KAAAkC,aAAA,KAAAC,QAAAC,SAIAtC,OACA,KAAAuC,aAAA,KAAAF,QAAAC,QACAE,QAAAC,IAAA,cAAAJ,QAAAC,OAAA,UAGAtB,cACA,KAAAN,SAAA,KAAAkB,MAAAC,MAAAnB,UAGAO,OAEA,KAAAyB,iBAAA,GACAC,WAAA,KACA,KAAAN,QAAAC,SAAA,KAAAhC,YAAAsC,IACA,KAAAlB,eAAA,KAAAW,QAAAC,QAEA,KAAAO,OACA,KAAAlB,oBAAA,KAAAU,QAAAC,SAEA,MAGApB,QAEA,KAAAwB,iBAAA,IAGA3B,WAAA,IAAA+B,EAEAC,GAAA,QAAAD,EAAA,KAAAlB,MAAAC,aAAA,IAAAiB,OAAA,EAAAA,EAAAhB,aAAA,IACA,KAAArB,SAAAuC,SAAA,QAAAD,EAAA,KAAAnB,MAAAC,aAAA,IAAAkB,OAAA,EAAAA,EAAAjB,eAIA7B,SAEA,KAAAV,UACA,KAAAmD,iBAAA,GAGA,KAAAA,iBAAA,IAKA,YACA,KAAAO,aAAA,GAEA,KAAAP,iBAAA,SAEA,KAAAN,aAAA,KAAAC,QAAAC,QAEAK,WAAA,KACA,KAAAN,QAAAC,QAAA,KAAAI,iBAAA,IACA,OASAQ,SAAA,IACAC,eAAA,sBACAA,eAAA,qEACAC,eAAA,+BAEAxC,WAEA,QAAAC,QAAA,CAEA,MAAAwC,EAAA,KAAA5C,SAAA,KAAAC,SAEA,WAAA2C,GAAAC,QAAA,OAEA,YCtN6U,I,wBCQzUC,EAAY,eACd,EACA5E,EACAyC,GACA,EACA,KACA,WACA,MAIa,aAAAmC,E","file":"js/chunk-cafa19ee.2e1b8853.js","sourcesContent":["export * from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--11-oneOf-1-0!../../node_modules/css-loader/dist/cjs.js??ref--11-oneOf-1-1!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--11-oneOf-1-2!../../node_modules/less-loader/dist/cjs.js??ref--11-oneOf-1-3!../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Play.vue?vue&type=style&index=0&id=0a8e0ac0&prod&lang=less&scoped=true\"","var render = function render(){var _vm=this,_c=_vm._self._c;return _c('div',{staticClass:\"player\",staticStyle:{\"width\":\"300px\"}},[_c('div',{staticClass:\"player_disk\",on:{\"click\":function($event){return _vm.changePlayDetailState(true)}}},[_c('div',{staticClass:\"disk\",class:{ disk__playing: _vm.isPlaying }},[_c('label',{ref:\"cover\",staticClass:\"disk_cover\",style:({\n          transform: _vm.stopMatrix,\n          backgroundImage: _vm.coverUrl ? `url(${_vm.coverUrl})` : '',\n        }),attrs:{\"for\":\"file\"}})])]),_c('div',{staticClass:\"player_control\"},[_c('div',{staticClass:\"control\",class:{ control__playing: _vm.isPlaying }},[_c('div',{staticClass:\"control_btn control_btn__side\",on:{\"click\":_vm.prev}},[_c('i',{staticClass:\"el-icon-arrow-left\"})]),_c('div',{staticClass:\"control_btn\",on:{\"click\":_vm.onplay}},[_c('i',{class:_vm.isPlaying ? 'el-icon-video-pause' : 'el-icon-video-play'})]),_c('div',{staticClass:\"control_btn control_btn__side\",on:{\"click\":_vm.next}},[_c('i',{staticClass:\"el-icon-arrow-right\"})])])]),_c('div',{staticClass:\"player_progress\"},[_c('div',{staticClass:\"progress\",class:{ progress__playing: _vm.isPlaying }},[_c('h2',{staticClass:\"progress_title\"},[_vm._v(\" \"+_vm._s(_vm.currentPlay ? _vm.currentPlay.name : \"暂无播放歌曲\")+\" \")]),_c('p',{staticClass:\"progress_text\"},[_vm._v(\" \"+_vm._s(_vm.s_to_hs(_vm.position))+\" / \"+_vm._s(_vm.s_to_hs(_vm.duration))+\" \")]),_c('div',{staticClass:\"progress_line\"},[_c('span',{style:({ width: _vm.progress })})])])]),_c('audio',{ref:\"audio\",staticStyle:{\"display\":\"none\"},attrs:{\"src\":_vm.playUrl,\"loop\":_vm.isLoop,\"autoplay\":_vm.isPlaying},on:{\"timeupdate\":_vm.onupdate,\"canplay\":_vm.getDuration,\"play\":_vm.play,\"pause\":_vm.pause,\"ended\":_vm.end}})])\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n  <!-- 播放器 -->\n\n  <div style=\"width: 300px\" class=\"player\">\n    <div class=\"player_disk\" @click=\"changePlayDetailState(true)\">\n      <div class=\"disk\" :class=\"{ disk__playing: isPlaying }\">\n        <!-- 旋转封面 -->\n        <label\n          class=\"disk_cover\"\n          ref=\"cover\"\n          for=\"file\"\n          :style=\"{\n            transform: stopMatrix,\n            backgroundImage: coverUrl ? `url(${coverUrl})` : '',\n          }\"\n        />\n      </div>\n    </div>\n    <!-- 控制部分 -->\n    <div class=\"player_control\">\n      <div class=\"control\" :class=\"{ control__playing: isPlaying }\">\n        <div @click=\"prev\" class=\"control_btn control_btn__side\">\n          <!-- 上一曲-->\n          <i class=\"el-icon-arrow-left\" />\n        </div>\n        <div class=\"control_btn\" @click=\"onplay\">\n          <!-- 播放按钮 -->\n          <i :class=\"isPlaying ? 'el-icon-video-pause' : 'el-icon-video-play'\">\n          </i>\n          <!-- <span class=\"play-btn\" /> -->\n        </div>\n        <!--    下一曲 -->\n        <div @click=\"next\" class=\"control_btn control_btn__side\">\n          <i class=\"el-icon-arrow-right\" />\n        </div>\n      </div>\n    </div>\n    <!--  // 播放进度-->\n    <div class=\"player_progress\">\n      <div class=\"progress\" :class=\"{ progress__playing: isPlaying }\">\n        <!-- 歌曲名称 -->\n        <h2 class=\"progress_title\">\n          {{ currentPlay ? currentPlay.name : \"暂无播放歌曲\" }}\n        </h2>\n        <!-- 歌曲时间 -->\n        <p class=\"progress_text\">\n          {{ s_to_hs(position) }} /\n          {{ s_to_hs(duration) }}\n        </p>\n        <!--  //duration -->\n        <!-- 进度条 -->\n        <div class=\"progress_line\">\n          <span :style=\"{ width: progress }\" />\n        </div>\n      </div>\n    </div>\n    <audio\n      style=\"display: none\"\n      ref=\"audio\"\n      @timeupdate=\"onupdate\"\n      @canplay=\"getDuration\"\n      @play=\"play\"\n      @pause=\"pause\"\n      :src=\"playUrl\"\n      @ended=\"end\"\n      :loop=\"isLoop\"\n      :autoplay=\"isPlaying\"\n    ></audio>\n  </div>\n\n  <!-- 歌词框 -->\n\n  <!-- audio标签 -->\n</template>\n\n<script>\n// eslint-disable-next-line camelcase\nimport { s_to_hs } from '@/utils/index.js'\nimport { mapMutations, mapState, mapGetters, mapActions } from 'vuex'\nexport default {\n\n  data () {\n    return {\n      // /* 当前歌词 */\n      // contentText: '',\n      // playurl: '',\n      stopMatrix: 0,\n      // coverUrl: '',\n      // 当前时间\n      position: 0,\n      // 总时间\n      duration: 0,\n      // 进度条 定义在计算属性\n      // progress: 0,\n      playSong: {}\n    }\n  },\n  watch: {\n    // 检测播放id变化 改变播放id  获取播放歌曲详细信息，获取歌词\n    'nowPlay.playId' (newval) {\n      // this.currentLyric = ''\n      // this.currentTranslationLyric = ''\n      this.changeCurrentLyric({})\n      // console.log(newval)\n      // 获取当前播放歌曲的详情\n      this.getCurrentPlay(newval)\n      // 获取当前播放歌曲的歌词\n      this.getCurrentPlayLyric(newval)\n    },\n    'nowPlay.newCurrentTime' (newval) {\n      this.$refs.audio.currentTime = newval\n    },\n    isPlaying (newval) {\n      if (newval) {\n        this.$refs.audio.play()\n      } else {\n        this.$refs.audio.pause()\n      }\n    },\n    position (newval) {\n      this.changePlaycurrentTime(this.position)\n    },\n    duration (newval) {\n      this.changePlayTotalTime(this.duration)\n    }\n  },\n  methods: {\n    s_to_hs,\n    ...mapMutations('play', ['changePlaycurrentTime', 'changePlayTotalTime', 'changePlayId', 'playNextSong', 'playPrevSong', 'changePlayState', 'changePlayDetailState']),\n    ...mapActions('play', ['getCurrentPlay']),\n    ...mapActions('lyric', ['getCurrentPlayLyric', 'formatLyric']),\n    ...mapMutations('lyric', ['changeCurrentLyric']),\n    // 下一首 改变播放id,\n    next () {\n      this.playNextSong(this.nowPlay.playId)\n      // console.log('当前播放id', this.nowPlay.playId, '点击下一首')\n    },\n    // 上一首\n    prev () {\n      this.playPrevSong(this.nowPlay.playId)\n      console.log('当前播放id', this.nowPlay.playId, '点击上一首')\n    },\n    // 歌曲加载完成自动获取总时长\n    getDuration () {\n      this.duration = this.$refs.audio.duration\n    },\n    // 当音乐开始播放\n    play () {\n      // 改变播放状态\n      this.changePlayState(true)\n      setTimeout(() => {\n        if (this.nowPlay.playId !== this.currentPlay.id) {\n          this.getCurrentPlay(this.nowPlay.playId)\n        }\n        if (!this.lyric) {\n          this.getCurrentPlayLyric(this.nowPlay.playId)\n        }\n      }, 2000)\n    },\n    // 音乐暂停\n    pause () {\n      // 改变播放状态\n      this.changePlayState(false)\n    },\n    // 歌曲进度更新时\n    onupdate () {\n      // 动态更新播放事件\n      if (this.$refs.audio?.currentTime > 1) {\n        this.position = parseInt(this.$refs.audio?.currentTime)\n      }\n    },\n    // 点击播放按钮\n    onplay () {\n      // 改变播放状态 如果不在播放就自动播放 如果在播放就暂停\n      if (this.isPlaying) {\n        this.changePlayState(false)\n        // this.$refs.audio.pause()\n      } else {\n        this.changePlayState(true)\n        // this.$refs.audio.play()\n      }\n    },\n    // 音乐播放完毕\n    async end () {\n      this.currentLyric = ''\n      // 改变播放状态\n      this.changePlayState(false)\n      // 触发下一曲事件\n      await this.playNextSong(this.nowPlay.playId)\n      // 改变完成id后等待1秒，如果有播放id 开始播放\n      setTimeout(() => {\n        if (this.nowPlay.playId) { this.changePlayState(true) }\n      }, 1000)\n      // this.$store.commit('play/playNextSong', )\n    }\n    // 处理歌词\n    /*           this.currentLyric = null\n    this.currentTranslationLyric = null */\n    // 过滤器\n\n  },\n  computed: {\n    ...mapState('lyric', ['lyric']),\n    ...mapState('play', ['nowPlay', 'currentPlay', 'playList', 'isPlaying', 'isLoop']),\n    ...mapGetters('play', ['playUrl', 'coverUrl']),\n    // 计算进度条长度\n    progress () {\n      // 如果有播放地址\n      if (this.playUrl) {\n        // 算出当前播放占比\n        const str = this.position / this.duration\n        // 转百分比\n        return `${(str * 100).toFixed(2)}%`\n      } else {\n        return 0\n      }\n    }\n  }\n}\n\n</script>\n\n<style lang=\"less\" scoped>\n.player {\n  position: relative;\n  display: flex;\n  max-width: 300px;\n  max-height: 75px;\n  width: 300px;\n  height: 75px;\n  border-radius: 8px;\n  background-color: white;\n  box-shadow: 0 30px 60px rgba(0, 0, 0, 0.12),\n    0 20px 20px rgba(95, 23, 101, 0.2);\n}\n.player_disk {\n  flex: 1.2;\n  padding: 12px;\n}\n.player_control {\n  flex: 2;\n  padding: 12px 0;\n  padding-right: 12px;\n}\n.player_progress {\n  padding-bottom: 4px;\n  position: absolute;\n  left: 9px;\n  right: 9px;\n  top: 0;\n  bottom: 25px;\n  z-index: -1;\n}\n//disk\n.disk {\n  position: relative;\n  padding-top: 100%;\n  border-radius: 100%;\n  overflow: hidden;\n  transform: translateY(-50%) scale(0.88);\n  transform-origin: center bottom;\n  transition: all 0.6s ease;\n}\n.disk input {\n  display: none;\n}\n.disk_cover {\n  position: absolute;\n  top: -10px;\n  left: -10px;\n  right: -10px;\n  bottom: -10px;\n  background-image: radial-gradient(circle, #444 0%, #333 100%);\n  background-size: cover;\n  background-position: center;\n}\n.disk_cover::after {\n  content: \"\";\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  margin-left: -8px;\n  margin-top: -8px;\n  width: 16px;\n  height: 16px;\n  border-radius: 100%;\n  background-image: linear-gradient(45deg, white, #dabad1);\n  box-shadow: 0 1px 1px 1px rgba(0, 0, 0, 0.2);\n}\n.disk__playing {\n  transform: translateY(-50%);\n  box-shadow: 0 10px 30px rgba(0, 0, 0, 0.1),\n    0 20px 20px -10px rgba(108, 29, 171, 0.3);\n}\n.disk__playing .disk_cover {\n  animation: rotate 25s infinite linear;\n  animation-delay: 0.8s;\n}\n@keyframes rotate {\n  from {\n    transform: rotate(0);\n  }\n  to {\n    transform: rotate(360deg);\n  }\n}\n// control\n.control {\n  display: flex;\n  height: 100%;\n}\n.control_btn {\n  display: flex;\n  margin: 2px;\n  align-items: center;\n  justify-content: center;\n  flex: 1;\n  border-radius: 4px;\n  color: #ccc;\n  font-size: 16px;\n  transition: background-color 0.6s ease;\n}\n.control_btn:hover {\n  background-color: #ddd;\n  color: white;\n}\n.control_btn__side {\n  font-size: 14px;\n}\n.play-btn {\n  position: relative;\n  width: 20px;\n  height: 20px;\n}\n.play-btn::before {\n  content: \"\";\n  position: absolute;\n  left: 11px;\n  top: 50%;\n  margin-left: -4px;\n  margin-top: -10px;\n  width: 0;\n  height: 0;\n  border: 12px solid transparent;\n  border-left-color: #ccc;\n  border-top-width: 10px;\n  border-bottom-width: 10px;\n  transition: all 0.2s ease;\n}\n.play-btn::after {\n  content: \"\";\n  position: absolute;\n  right: 5px;\n  top: 50%;\n  margin-right: -4px;\n  margin-top: -10px;\n  width: 0;\n  height: 20px;\n  border: 0 solid transparent;\n  border-width: 0 0 0 6px;\n  border-left-color: #ccc;\n  opacity: 0;\n  transform: scale(0);\n  transition: all 0.2s ease;\n}\n.control__playing .play-btn::before {\n  border-width: 0 0 0 6px;\n  height: 20px;\n  left: 5px;\n}\n.control__playing .play-btn::after {\n  opacity: 1;\n  transform: scale(1);\n}\n.control_btn:hover .play-btn::before {\n  border-left-color: white;\n}\n.control_btn:hover .play-btn::after {\n  border-color: white;\n}\n//progressBar\n\n.progress {\n  padding-left: 123px;\n  padding-right: 12px;\n  padding-bottom: 4px;\n  // height: 100%;\n  border-radius: 6px 6px 0 0;\n  background-color: rgba(255, 255, 255, 0.5);\n  transition: all 0.6s ease;\n}\n.progress__playing {\n  transform: translateY(-100%);\n}\n.progress_title {\n  padding-top: 6px;\n  font-size: 12px;\n  font-weight: bold;\n  overflow: hidden;\n  text-overflow: ellipsis;\n}\n.progress_text {\n  padding-top: 2px;\n  padding-left: 2px;\n  font-size: 12px;\n  font-weight: bold;\n  color: #ccc;\n  transform: scale(0.6);\n  transform-origin: left top;\n}\n.progress_line {\n  height: 3px;\n  border-radius: 3px;\n  overflow: hidden;\n  background-color: #ddd;\n}\n.progress_line span {\n  display: block;\n  height: 100%;\n  background-color: #ec4141;\n}\n</style>\n","import mod from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Play.vue?vue&type=script&lang=js\"; export default mod; export * from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Play.vue?vue&type=script&lang=js\"","import { render, staticRenderFns } from \"./Play.vue?vue&type=template&id=0a8e0ac0&scoped=true\"\nimport script from \"./Play.vue?vue&type=script&lang=js\"\nexport * from \"./Play.vue?vue&type=script&lang=js\"\nimport style0 from \"./Play.vue?vue&type=style&index=0&id=0a8e0ac0&prod&lang=less&scoped=true\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"0a8e0ac0\",\n  null\n  \n)\n\nexport default component.exports"],"sourceRoot":""}