{"version":3,"sources":["webpack:///./src/components/SongsTable.vue?cfd8","webpack:///./src/views/Main/SongsList.vue?00d6","webpack:///./src/components/SongsTable.vue?3635","webpack:///src/components/SongsTable.vue","webpack:///./src/components/SongsTable.vue?c48d","webpack:///./src/components/SongsTable.vue","webpack:///./src/views/Main/SongsList.vue?ed57","webpack:///src/views/Main/SongsList.vue","webpack:///./src/views/Main/SongsList.vue?942b","webpack:///./src/views/Main/SongsList.vue"],"names":["render","_vm","this","_h","$createElement","_c","_self","staticStyle","attrs","SongsList","tableRowClassName","on","onPlaylistClick","scopedSlots","_u","key","fn","ref","row","id","status","_e","btn","$event","onPlay","staticClass","_v","addToList","staticRenderFns","props","type","Array","required","default","String","Boolean","data","methods","console","log","playid","changePlayId","nowPlay","playId","computed","component","seeSongsList","coverImgUrl","_s","name","creator","avatarUrl","nickname","_l","item","i","description","addAlltoList","userId","userInfo","isLogin","subscribeSongList","subscribed","tracks","watch","getSongsList","created","palyid","playList","length","$confirm","then","forEach","state","components","SongsTable"],"mappings":"gHAAA,W,2DCAA,W,oCCAA,IAAIA,EAAS,WAAa,IAAIC,EAAIC,KAASC,EAAGF,EAAIG,eAAmBC,EAAGJ,EAAIK,MAAMD,IAAIF,EAAG,OAAOE,EAAG,MAAM,CAACE,YAAY,CAAC,MAAQ,SAAS,CAACF,EAAG,WAAW,CAACE,YAAY,CAAC,YAAY,QAAQC,MAAM,CAAC,KAAOP,EAAIQ,UAAU,OAAS,GAAG,iBAAiBR,EAAIS,mBAAmBC,GAAG,CAAC,eAAeV,EAAIW,kBAAkB,CAACP,EAAG,kBAAkB,CAACG,MAAM,CAAC,MAAQ,QAAQK,YAAYZ,EAAIa,GAAG,CAAC,CAACC,IAAI,UAAUC,GAAG,SAASC,GAC/Y,IAAIC,EAAMD,EAAIC,IACd,MAAO,CAACb,EAAG,aAAa,CAACG,MAAM,CAAC,GAAKU,EAAIC,MAAMd,EAAG,SAAS,CAACG,MAAM,CAAC,GAAKU,EAAIC,aAAad,EAAG,kBAAkB,CAACG,MAAM,CAAC,KAAO,OAAO,YAAY,MAAM,MAAQ,UAA0B,WAAfP,EAAImB,OAAqBf,EAAG,kBAAkB,CAACG,MAAM,CAAC,MAAQ,QAAQ,KAAO,kBAAkB,MAAQ,QAAQP,EAAIoB,KAAqB,QAAfpB,EAAImB,OAAkBf,EAAG,kBAAkB,CAACG,MAAM,CAAC,MAAQ,QAAQ,KAAO,uBAAuB,MAAQ,QAAQP,EAAIoB,KAAqB,SAAfpB,EAAImB,OAAmBf,EAAG,kBAAkB,CAACG,MAAM,CAAC,MAAQ,QAAQ,KAAO,aAAa,MAAQ,QAAQP,EAAIoB,KAAqB,WAAfpB,EAAImB,QAAuBnB,EAAIqB,IAAKjB,EAAG,kBAAkB,CAACG,MAAM,CAAC,YAAY,QAAQ,KAAO,aAAa,MAAQ,QAAQP,EAAIoB,KAAqB,QAAfpB,EAAImB,QAAoBnB,EAAIqB,IAAKjB,EAAG,kBAAkB,CAACG,MAAM,CAAC,YAAY,QAAQ,KAAO,kBAAkB,MAAQ,QAAQP,EAAIoB,KAAqB,SAAfpB,EAAImB,QAAqBnB,EAAIqB,IAAKjB,EAAG,kBAAkB,CAACG,MAAM,CAAC,YAAY,QAAQ,KAAO,UAAU,MAAQ,QAAQP,EAAIoB,KAAMpB,EAAO,IAAEI,EAAG,kBAAkB,CAACG,MAAM,CAAC,MAAQ,KAAK,MAAQ,SAASK,YAAYZ,EAAIa,GAAG,CAAC,CAACC,IAAI,UAAUC,GAAG,SAASC,GACxgC,IAAIC,EAAMD,EAAIC,IACd,MAAO,CAACb,EAAG,YAAY,CAACG,MAAM,CAAC,KAAO,UAAU,MAAQ,IAAIG,GAAG,CAAC,MAAQ,SAASY,GAAQ,OAAOtB,EAAIuB,OAAON,EAAIC,OAAO,CAACd,EAAG,IAAI,CAACoB,YAAY,uBAAuBxB,EAAIyB,GAAG,SAASrB,EAAG,YAAY,CAACG,MAAM,CAAC,KAAO,OAAO,MAAQ,IAAIG,GAAG,CAAC,MAAQ,SAASY,GAAQ,OAAOtB,EAAI0B,UAAUT,EAAIC,OAAO,CAAClB,EAAIyB,GAAG,eAAe,MAAK,EAAM,cAAczB,EAAIoB,KAAOpB,EAAIqB,IAEnRrB,EAAIoB,KAFoRhB,EAAG,kBAAkB,CAACG,MAAM,CAAC,MAAQ,MAAMK,YAAYZ,EAAIa,GAAG,CAAC,CAACC,IAAI,UAAUC,GAAG,SAASC,GAC9b,IAAIC,EAAMD,EAAIC,IACd,MAAO,CAACb,EAAG,aAAa,CAACG,MAAM,CAAC,GAAKU,EAAIC,UAAU,MAAK,EAAM,eAAwB,IAAI,IACtFS,EAAkB,G,wBC4EtB,GAEEC,MAAO,CACLpB,UAAW,CACTqB,KAAMC,MACNC,UAAU,EACVC,QAAS,WAAf,WAGIb,OAAQ,CACNU,KAAMI,OACNF,UAAU,GAEZV,IAAK,CACHQ,KAAMK,QACNF,SAAS,IAGbG,KAlBF,WAmBI,MAAO,IAITC,QAAS,OAAX,OAAW,CAAX,iCACA,gEAEA,kEAHA,IAMIb,OANJ,SAMA,GACMc,QAAQC,IAAI,OAAQC,GACpBtC,KAAKuC,aAAaD,IAGpB5B,gBAXJ,SAWA,OAEMV,KAAKuC,aAAavB,EAAIC,KAGxBT,kBAhBJ,YAgBA,uBAEM,OAAIQ,EAAIC,KAAOjB,KAAKwC,QAAQC,OACnB,cAEA,MAIbC,SAAU,OAAZ,OAAY,CAAZ,GACA,uDCpIoV,I,wBCQhVC,EAAY,eACd,EACA7C,EACA4B,GACA,EACA,KACA,WACA,MAIa,OAAAiB,E,oDCnBf,IAAI7C,EAAS,WAAa,IAAIC,EAAIC,KAASC,EAAGF,EAAIG,eAAmBC,EAAGJ,EAAIK,MAAMD,IAAIF,EAAG,OAA6B,OAArBF,EAAI6C,aAAuBzC,EAAG,MAAM,CAACoB,YAAY,QAAQ,CAACpB,EAAG,MAAM,CAACoB,YAAY,QAAQ,CAACpB,EAAG,MAAM,CAACoB,YAAY,OAAO,CAACpB,EAAG,MAAM,CAACG,MAAM,CAAC,IAAMP,EAAI6C,aAAaC,YAAY,IAAM,QAAQ1C,EAAG,MAAM,CAACoB,YAAY,QAAQ,CAACpB,EAAG,KAAK,CAACJ,EAAIyB,GAAGzB,EAAI+C,GAAG/C,EAAI6C,aAAaG,SAAS5C,EAAG,MAAM,CAACoB,YAAY,QAAQ,CAACpB,EAAG,YAAY,CAACG,MAAM,CAAC,IAAMP,EAAI6C,aAAaI,QAAQC,aAAa9C,EAAG,IAAI,CAACJ,EAAIyB,GAAGzB,EAAI+C,GAAG/C,EAAI6C,aAAaI,QAAQE,cAAc,GAAG/C,EAAG,IAAI,CAACJ,EAAIyB,GAAG,SAASzB,EAAIoD,GAAIpD,EAAI6C,aAAiB,MAAE,SAASQ,EAAKC,GAAG,OAAOlD,EAAG,SAAS,CAACU,IAAIwC,EAAE9B,YAAY,QAAQ,CAACxB,EAAIyB,GAAGzB,EAAI+C,GAAGM,UAAY,GAAGjD,EAAG,IAAI,CAACoB,YAAY,eAAe,CAACxB,EAAIyB,GAAG,MAAMzB,EAAI+C,GAAG/C,EAAI6C,aAAaU,gBAAgBnD,EAAG,MAAM,CAACoB,YAAY,OAAO,CAACpB,EAAG,YAAY,CAACG,MAAM,CAAC,KAAO,UAAU,MAAQ,IAAIG,GAAG,CAAC,MAAQV,EAAIwD,eAAe,CAACxD,EAAIyB,GAAG,UAAUrB,EAAG,YAAY,CAACG,MAAM,CAAC,KAAO,OAAO,SAAWP,EAAI6C,aAAaY,SAAWzD,EAAI0D,SAASD,SAAWzD,EAAI2D,QAAQ,MAAQ,IAAIjD,GAAG,CAAC,MAAQ,SAASY,GAAQ,OAAOtB,EAAI4D,kBAAkB5D,EAAI6C,aAAagB,WAAY7D,EAAI6C,aAAa3B,OAAO,CAAClB,EAAIyB,GAAGzB,EAAI+C,GAAG/C,EAAI6C,aAAagB,WAAa,MAAQ,UAAU,OAAOzD,EAAG,IAAI,CAACoB,YAAY,SAAS,CAACxB,EAAIyB,GAAG,UAAUrB,EAAG,aAAa,CAACG,MAAM,CAAC,OAAS,OAAO,UAAYP,EAAI6C,aAAaiB,WAAW,GAAG9D,EAAIoB,MAC/yCO,EAAkB,G,kFCiEtB,GAEEoC,MAAO,CACL7C,GADJ,WAEMjB,KAAK4C,aAAe,KACpB5C,KAAK+D,iBAITC,QATF,WAYIhE,KAAK+D,gBAEP7B,KAdF,WAeI,MAAO,CAELU,aAAc,OAIlBjB,MAAO,CAAC,MACRQ,QAAS,OAAX,OAAW,CAAX,iCAEA,kFACA,sDAHA,IAKI,aALJ,WAKA,gLACA,qBADA,gBACA,EADA,EACA,KAEA,eAEA,+BACA,2BANA,8CAWIb,OAhBJ,SAgBA,GACMtB,KAAKuC,aAAa0B,IAEpBV,aAnBJ,WAmBA,WAEUvD,KAAKkE,SAASC,OAAS,EACzBnE,KAAKoE,SAAS,gBAAiB,MAAMC,MAAK,WACxC,EAAV,gBACU,EAAV,yCACY,EAAZ,kBAEU,EAAV,6CACA,oBAEQrE,KAAK4C,aAAaiB,OAAOS,SAAQ,SAAzC,GACU,EAAV,kBAEQtE,KAAKuC,aAAavC,KAAK4C,aAAaiB,OAAO,GAAG5C,MAGlD0C,kBApCJ,SAoCA,gBAEA,QACUY,EACFvE,KAAKoE,SAAS,aAAc,MAAMC,KAA1C,4JACA,oBADA,OACA,EADA,OAEA,oBACA,6BACA,6BACA,sCACA,gBANA,4CAQA,mBAEQrE,KAAKoE,SAAS,WAAY,MAAMC,KAAxC,4JACA,oBADA,OACA,EADA,OAEA,oBACA,2BACA,6BACA,sCACA,gBANA,4CAQA,sBAKEG,WAAY,CACVC,WAAJ,QAEE/B,SAAU,OAAZ,OAAY,CAAZ,iCACA,6CACA,4CACA,6CC7JkW,I,wBCQ9VC,EAAY,eACd,EACA7C,EACA4B,GACA,EACA,KACA,WACA,MAIa,aAAAiB,E","file":"js/chunk-9fd72bfc.2e2e6da8.js","sourcesContent":["export * from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--10-oneOf-1-0!../../node_modules/css-loader/dist/cjs.js??ref--10-oneOf-1-1!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--10-oneOf-1-2!../../node_modules/less-loader/dist/cjs.js??ref--10-oneOf-1-3!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./SongsTable.vue?vue&type=style&index=0&id=395ef2a0&lang=less&scoped=true&\"","export * from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--10-oneOf-1-0!../../../node_modules/css-loader/dist/cjs.js??ref--10-oneOf-1-1!../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--10-oneOf-1-2!../../../node_modules/less-loader/dist/cjs.js??ref--10-oneOf-1-3!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./SongsList.vue?vue&type=style&index=0&id=c064868c&lang=less&scoped=true&\"","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticStyle:{\"width\":\"100%\"}},[_c('el-table',{staticStyle:{\"font-size\":\"14px\"},attrs:{\"data\":_vm.SongsList,\"stripe\":\"\",\"row-class-name\":_vm.tableRowClassName},on:{\"row-dblclick\":_vm.onPlaylistClick}},[_c('el-table-column',{attrs:{\"width\":\"34px\"},scopedSlots:_vm._u([{key:\"default\",fn:function(ref){\nvar row = ref.row;\nreturn [_c('IsPlayIcon',{attrs:{\"id\":row.id}}),_c('IsLike',{attrs:{\"id\":row.id}})]}}])}),_c('el-table-column',{attrs:{\"prop\":\"name\",\"min-width\":\"200\",\"label\":\"音乐标题\"}}),(_vm.status === 'search')?_c('el-table-column',{attrs:{\"width\":\"100px\",\"prop\":\"artists[0].name\",\"label\":\"歌手\"}}):_vm._e(),(_vm.status === 'new')?_c('el-table-column',{attrs:{\"width\":\"100px\",\"prop\":\"song.artists[0].name\",\"label\":\"歌手\"}}):_vm._e(),(_vm.status === 'list')?_c('el-table-column',{attrs:{\"width\":\"100px\",\"prop\":\"ar[0].name\",\"label\":\"歌手\"}}):_vm._e(),(_vm.status === 'search' && _vm.btn)?_c('el-table-column',{attrs:{\"min-width\":\"200px\",\"prop\":\"album.name\",\"label\":\"专辑\"}}):_vm._e(),(_vm.status === 'new' && _vm.btn)?_c('el-table-column',{attrs:{\"min-width\":\"200px\",\"prop\":\"song.album.name\",\"label\":\"专辑\"}}):_vm._e(),(_vm.status === 'list' && _vm.btn)?_c('el-table-column',{attrs:{\"min-width\":\"200px\",\"prop\":\"al.name\",\"label\":\"专辑\"}}):_vm._e(),(_vm.btn)?_c('el-table-column',{attrs:{\"label\":\"操作\",\"width\":\"300px\"},scopedSlots:_vm._u([{key:\"default\",fn:function(ref){\nvar row = ref.row;\nreturn [_c('el-button',{attrs:{\"type\":\"primary\",\"round\":\"\"},on:{\"click\":function($event){return _vm.onPlay(row.id)}}},[_c('i',{staticClass:\"el-icon-video-play\"}),_vm._v(\"播放 \")]),_c('el-button',{attrs:{\"type\":\"info\",\"round\":\"\"},on:{\"click\":function($event){return _vm.addToList(row.id)}}},[_vm._v(\"添加到列表\")])]}}],null,false,2400387374)}):_vm._e(),(!_vm.btn)?_c('el-table-column',{attrs:{\"width\":\"40\"},scopedSlots:_vm._u([{key:\"default\",fn:function(ref){\nvar row = ref.row;\nreturn [_c('DeleteIcon',{attrs:{\"id\":row.id}})]}}],null,false,3036415769)}):_vm._e()],1)],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n  <div style=\"width: 100%\">\n    <el-table\n      style=\"font-size: 14px\"\n      @row-dblclick=\"onPlaylistClick\"\n      :data=\"SongsList\"\n      stripe\n      :row-class-name=\"tableRowClassName\"\n    >\n      <!--  -->\n      <el-table-column width=\"34px\">\n        <template #default=\"{ row }\">\n          <IsPlayIcon :id=\"row.id\" />\n          <IsLike :id=\"row.id\"> </IsLike>\n        </template>\n      </el-table-column>\n      <el-table-column prop=\"name\" min-width=\"200\" label=\"音乐标题\">\n      </el-table-column>\n      <!-- 通过父组件川参判断是什么歌单类型 改变获取数据的路径 -->\n      <el-table-column\n        width=\"100px\"\n        v-if=\"status === 'search'\"\n        prop=\"artists[0].name\"\n        label=\"歌手\"\n      >\n      </el-table-column>\n      <el-table-column\n        width=\"100px\"\n        v-if=\"status === 'new'\"\n        prop=\"song.artists[0].name\"\n        label=\"歌手\"\n      >\n      </el-table-column>\n      <el-table-column\n        width=\"100px\"\n        v-if=\"status === 'list'\"\n        prop=\"ar[0].name\"\n        label=\"歌手\"\n      >\n      </el-table-column>\n      <el-table-column\n        min-width=\"200px\"\n        v-if=\"status === 'search' && btn\"\n        prop=\"album.name\"\n        label=\"专辑\"\n      >\n      </el-table-column>\n      <el-table-column\n        min-width=\"200px\"\n        v-if=\"status === 'new' && btn\"\n        prop=\"song.album.name\"\n        label=\"专辑\"\n      >\n      </el-table-column>\n      <el-table-column\n        min-width=\"200px\"\n        v-if=\"status === 'list' && btn\"\n        prop=\"al.name\"\n        label=\"专辑\"\n      >\n      </el-table-column>\n      <el-table-column v-if=\"btn\" label=\"操作\" width=\"300px\">\n        <template #default=\"{ row }\">\n          <el-button type=\"primary\" @click=\"onPlay(row.id)\" round>\n            <i class=\"el-icon-video-play\"></i>播放\n          </el-button>\n          <el-button type=\"info\" @click=\"addToList(row.id)\" round\n            >添加到列表</el-button\n          >\n        </template>\n      </el-table-column>\n      <el-table-column v-if=\"!btn\" width=\"40\">\n        <template #default=\"{ row }\">\n          <DeleteIcon :id=\"row.id\" />\n        </template>\n      </el-table-column>\n    </el-table>\n  </div>\n</template>\n\n<script>\nimport { mapMutations, mapActions, mapState } from 'vuex'\n//  复用歌曲表格组件\nexport default {\n  // 需要引用者传入songslist歌单列表\n  props: {\n    SongsList: {\n      type: Array,\n      required: true,\n      default: () => []\n    },\n    // 父组件传入歌单类型，从而获取不同歌单类型的信息\n    status: {\n      type: String,\n      required: true\n    },\n    btn: {\n      type: Boolean,\n      default: true\n    }\n  },\n  data () {\n    return {\n      // newarr: []\n    }\n  },\n  methods: {\n    ...mapActions('play', ['getCurrentPlay', 'addToList']),\n    // 从vuex中获取改变播放音乐id的方法\n    ...mapMutations('play', ['changePlayId', 'addPlayList']),\n    // 点击改变播放音乐的id\n    // 播放\n    onPlay (playid) {\n      console.log('我要播放', playid)\n      this.changePlayId(playid)\n    },\n    // 双击事件\n    onPlaylistClick (row, column, event) {\n      // console.log(row, column, event)\n      this.changePlayId(row.id)\n    },\n    // 当前播放的音乐样式\n    tableRowClassName ({ row, rowIndex }) {\n      // console.log(row, rowIndex)\n      if (row.id === this.nowPlay.playId) {\n        return 'success-row'\n      } else {\n        return ''\n      }\n    }\n  },\n  computed: {\n    ...mapState('play', ['nowPlay', 'playList'])\n  }\n}\n</script>\n\n<style lang=\"less\" scoped>\n.playing {\n  display: block;\n}\n.el-icon-video-play {\n  margin-right: 7px;\n}\n.el-table .warning-row {\n  background: oldlace;\n}\n\n/deep/ .el-table .success-row {\n  color: #ec4141;\n  // background: #f0f9eb;\n}\n</style>\n","import mod from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./SongsTable.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./SongsTable.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./SongsTable.vue?vue&type=template&id=395ef2a0&scoped=true&\"\nimport script from \"./SongsTable.vue?vue&type=script&lang=js&\"\nexport * from \"./SongsTable.vue?vue&type=script&lang=js&\"\nimport style0 from \"./SongsTable.vue?vue&type=style&index=0&id=395ef2a0&lang=less&scoped=true&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"395ef2a0\",\n  null\n  \n)\n\nexport default component.exports","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return (_vm.seeSongsList !== null)?_c('div',{staticClass:\"main\"},[_c('div',{staticClass:\"head\"},[_c('div',{staticClass:\"pic\"},[_c('img',{attrs:{\"src\":_vm.seeSongsList.coverImgUrl,\"alt\":\"\"}})]),_c('div',{staticClass:\"info\"},[_c('h3',[_vm._v(_vm._s(_vm.seeSongsList.name))]),_c('div',{staticClass:\"user\"},[_c('el-avatar',{attrs:{\"src\":_vm.seeSongsList.creator.avatarUrl}}),_c('p',[_vm._v(_vm._s(_vm.seeSongsList.creator.nickname))])],1),_c('p',[_vm._v(\" 标签: \"),_vm._l((_vm.seeSongsList.tags),function(item,i){return _c('el-tag',{key:i,staticClass:\"tags\"},[_vm._v(_vm._s(item))])})],2),_c('p',{staticClass:\"description\"},[_vm._v(\"简介:\"+_vm._s(_vm.seeSongsList.description))]),_c('div',{staticClass:\"btn\"},[_c('el-button',{attrs:{\"type\":\"primary\",\"round\":\"\"},on:{\"click\":_vm.addAlltoList}},[_vm._v(\"播放全部\")]),_c('el-button',{attrs:{\"type\":\"info\",\"disabled\":_vm.seeSongsList.userId === _vm.userInfo.userId || !_vm.isLogin,\"round\":\"\"},on:{\"click\":function($event){return _vm.subscribeSongList(_vm.seeSongsList.subscribed, _vm.seeSongsList.id)}}},[_vm._v(_vm._s(_vm.seeSongsList.subscribed ? \"已收藏\" : \"收藏\"))])],1)])]),_c('p',{staticClass:\"title\"},[_vm._v(\"歌曲列表\")]),_c('SongsTable',{attrs:{\"status\":\"list\",\"SongsList\":_vm.seeSongsList.tracks}})],1):_vm._e()}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n  <!-- <el-main > -->\n  <div v-if=\"seeSongsList !== null\" class=\"main\">\n    <div class=\"head\">\n      <div class=\"pic\"><img :src=\"seeSongsList.coverImgUrl\" alt=\"\" /></div>\n      <div class=\"info\">\n        <h3>{{ seeSongsList.name }}</h3>\n        <div class=\"user\">\n          <el-avatar :src=\"seeSongsList.creator.avatarUrl\"></el-avatar>\n          <p>{{ seeSongsList.creator.nickname }}</p>\n        </div>\n\n        <p>\n          标签:\n          <el-tag\n            class=\"tags\"\n            v-for=\"(item, i) in seeSongsList.tags\"\n            :key=\"i\"\n            >{{ item }}</el-tag\n          >\n        </p>\n        <p class=\"description\">简介:{{ seeSongsList.description }}</p>\n        <div class=\"btn\">\n          <el-button type=\"primary\" @click=\"addAlltoList\" round\n            >播放全部</el-button\n          >\n          <el-button\n            @click=\"subscribeSongList(seeSongsList.subscribed, seeSongsList.id)\"\n            type=\"info\"\n            :disabled=\"seeSongsList.userId === userInfo.userId || !isLogin\"\n            round\n            >{{ seeSongsList.subscribed ? \"已收藏\" : \"收藏\" }}</el-button\n          >\n        </div>\n      </div>\n    </div>\n    <p class=\"title\">歌曲列表</p>\n    <!-- 通过作用域插槽，获取row数据，实现一些功能（编辑，拿到id跳转数据详情页；格式化数据） -->\n    <!-- <template>\n      <el-table :data=\"seeSongsList.tracks\" stripe style=\"width: 100%\">\n        <el-table-column prop=\"\" width=\"50\"> </el-table-column>\n        <el-table-column prop=\"name\" label=\"音乐标题\"> </el-table-column>\n        <el-table-column prop=\"ar[0].name\" label=\"歌手\"> </el-table-column>\n        <el-table-column prop=\"al.name\" label=\"专辑\"> </el-table-column>\n        <el-table-column prop=\"date\" label=\"操作\" width=\"300\">\n          <template #default=\"{ row }\">\n            <el-button type=\"primary\" @click=\"onPlay(row.id)\" round\n              >播放音乐{{ row.id }}\n            </el-button>\n            <el-button type=\"success\" disabled round>添加到歌单</el-button>\n          </template>\n        </el-table-column>\n      </el-table>\n    </template> -->\n    <SongsTable status=\"list\" :SongsList=\"seeSongsList.tracks\" />\n  </div>\n  <!-- </el-main> -->\n</template>\n\n<script>\n//  引入歌单表格组件进行复用\nimport SongsTable from '@/components/SongsTable.vue'\n// 引入vuex中的方法\nimport { mapMutations, mapState, mapActions, mapGetters } from 'vuex'\n// 引入获取歌单信息的接口\nimport { GetSongsListAPI, subscribeSongListAPI } from '@/api/mainapi'\nexport default {\n  // 监听id变化重新发送请求获取最新歌单，清空原歌单数据\n  watch: {\n    id () {\n      this.seeSongsList = null\n      this.getSongsList()\n    }\n  },\n  // 获取歌单信息\n  created () {\n    // console.log(this.isLoginh)\n    // console.log(this.id)\n    this.getSongsList()\n  },\n  data () {\n    return {\n      //  保存歌单列表\n      seeSongsList: null\n    }\n  },\n  // 接受父组件传送的id\n  props: ['id'],\n  methods: {\n    // 改变正在播放的歌曲id\n    ...mapMutations('play', ['changePlayId', 'addPlayList', 'clearPlayList']),\n    ...mapActions('user', ['initUserPlayList']),\n    // 获取歌单列表的函数\n    async getSongsList () {\n      const { data: res } = await GetSongsListAPI(this.id)\n      // console.log(res)\n      if (res.code === 200) {\n        // console.log(res)\n        console.log('歌单列表', res.playlist)\n        this.seeSongsList = res.playlist\n        // console.log(this.seeSongsList)\n      }\n    },\n    // 点击按钮播放id音乐\n    onPlay (palyid) {\n      this.changePlayId(palyid)\n    },\n    addAlltoList () {\n      // 如果当前播放列表有数据 进行提示\n      if (this.playList.length > 0) {\n        this.$confirm('全部播放替换掉当前播放歌单', '提示').then(() => {\n          this.clearPlayList() // 清空当前播放列表\n          this.seeSongsList.tracks.forEach(item => {\n            this.addPlayList(item)\n          })\n          this.changePlayId(this.seeSongsList.tracks[0].id)\n        }).catch(console.log)\n      } else {\n        this.seeSongsList.tracks.forEach(item => {\n          this.addPlayList(item)\n        })\n        this.changePlayId(this.seeSongsList.tracks[0].id)\n      }\n    },\n    subscribeSongList (state, id) {\n      // 如果值为真发送取消收藏请求，否则发送收藏请求\n      const a = state ? 2 : 1\n      if (state) {\n        this.$confirm('确认取消收藏歌单吗?', '提示').then(async () => {\n          const res = await subscribeSongListAPI(id, a)\n          if (res.data.code === 200) {\n            this.$message.success('取消收藏成功')\n            this.seeSongsList.subscribed = false\n            this.initUserPlayList(this.userInfo.userId)\n            console.log(res)\n          }\n        }).catch(console.log)\n      } else {\n        this.$confirm('确认收藏歌单吗?', '提示').then(async () => {\n          const res = await subscribeSongListAPI(id, a)\n          if (res.data.code === 200) {\n            this.$message.success('收藏成功')\n            this.seeSongsList.subscribed = true\n            this.initUserPlayList(this.userInfo.userId)\n            console.log(res)\n          }\n        }).catch(console.log)\n      }\n    }\n  },\n  // 注册歌单表格组件准备复用\n  components: {\n    SongsTable\n  },\n  computed: {\n    ...mapGetters('user', ['isLogin']),\n    ...mapState('play', ['playList']),\n    ...mapState('user', ['userInfo'])\n  }\n  // 页面加载自动获取歌单信息\n\n}\n</script>\n\n<style lang=\"less\" scoped>\n.box {\n  float: right;\n}\n// .main {\n//   padding: 0 30px;\n//   position: absolute;\n//   left: 300px;\n//   right: 0px;\n//   top: 60px;\n//   bottom: 0px;\n//   padding-bottom: 60px;\n// }\n.title {\n  padding: 0.266667rem 0.24rem;\n  margin: 10px 0;\n  background-color: #eee;\n  color: #333;\n  font-size: 15px;\n}\n.time {\n  font-size: 13px;\n  color: #999;\n}\n\n.bottom {\n  margin-top: 13px;\n  line-height: 12px;\n}\n\n.button {\n  padding: 0;\n  float: right;\n}\n\n.image {\n  width: 100%;\n  display: block;\n}\n\n.clearfix:before,\n.clearfix:after {\n  display: table;\n  content: \"\";\n}\n\n.clearfix:after {\n  clear: both;\n}\n.head {\n  display: flex;\n  justify-content: space-between;\n  padding: 10px 20px;\n  .pic {\n    margin-right: 20px;\n    img {\n      width: 200px;\n    }\n  }\n  .info {\n    flex: 1;\n    .user {\n      margin-top: 10px;\n      display: flex;\n      align-items: center;\n      p {\n        margin-left: 20px;\n      }\n    }\n  }\n  .btn {\n    margin-top: 10px;\n  }\n  .tags {\n    margin-right: 10px;\n  }\n  .description {\n    display: -webkit-box;\n    -webkit-box-orient: vertical;\n    -webkit-line-clamp: 2;\n    overflow: hidden;\n  }\n}\n</style>\n","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./SongsList.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./SongsList.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./SongsList.vue?vue&type=template&id=c064868c&scoped=true&\"\nimport script from \"./SongsList.vue?vue&type=script&lang=js&\"\nexport * from \"./SongsList.vue?vue&type=script&lang=js&\"\nimport style0 from \"./SongsList.vue?vue&type=style&index=0&id=c064868c&lang=less&scoped=true&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"c064868c\",\n  null\n  \n)\n\nexport default component.exports"],"sourceRoot":""}