{"version":3,"sources":["webpack://music_pc2-[name]/./src/views/Main/SongsList.vue?3c36","webpack://music_pc2-[name]/./src/components/SongsTable.vue","webpack://music_pc2-[name]/src/components/SongsTable.vue","webpack://music_pc2-[name]/./src/components/SongsTable.vue?9886","webpack://music_pc2-[name]/./src/components/SongsTable.vue?e7ba","webpack://music_pc2-[name]/./src/views/Main/SongsList.vue","webpack://music_pc2-[name]/src/views/Main/SongsList.vue","webpack://music_pc2-[name]/./src/views/Main/SongsList.vue?1525","webpack://music_pc2-[name]/./src/views/Main/SongsList.vue?b804","webpack://music_pc2-[name]/./src/components/SongsTable.vue?40ab"],"names":["render","_vm","this","_c","_self","staticStyle","attrs","SongsList","tableRowClassName","on","onPlaylistClick","scopedSlots","_u","key","fn","row","id","status","_e","btn","$event","onPlay","staticClass","_v","addToList","staticRenderFns","props","type","Array","required","default","String","Boolean","data","methods","mapActions","mapMutations","playid","console","log","changePlayId","column","event","rowIndex","nowPlay","playId","computed","mapState","component","seeSongsList","coverImgUrl","_s","name","creator","avatarUrl","nickname","_l","tags","item","i","description","addAlltoList","userId","userInfo","isLogin","subscribeSongList","subscribed","tracks","watch","getSongsList","created","res","GetSongsListAPI","code","playlist","palyid","playList","length","$confirm","then","clearPlayList","forEach","addPlayList","catch","state","a","subscribeSongListAPI","$message","success","initUserPlayList","components","SongsTable","mapGetters"],"mappings":"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","file":"js/chunk-41169409.e9048992.js","sourcesContent":["export * from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--11-oneOf-1-0!../../../node_modules/css-loader/dist/cjs.js??ref--11-oneOf-1-1!../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--11-oneOf-1-2!../../../node_modules/less-loader/dist/cjs.js??ref--11-oneOf-1-3!../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./SongsList.vue?vue&type=style&index=0&id=c064868c&prod&lang=less&scoped=true\"","var render = function render(){var _vm=this,_c=_vm._self._c;return _c('div',{staticStyle:{\"width\":\"100%\"}},[_c('el-table',{staticStyle:{\"font-size\":\"14px\"},attrs:{\"data\":_vm.SongsList,\"stripe\":\"\",\"row-class-name\":_vm.tableRowClassName},on:{\"row-dblclick\":_vm.onPlaylistClick}},[_c('el-table-column',{attrs:{\"width\":\"34px\"},scopedSlots:_vm._u([{key:\"default\",fn:function({ row }){return [_c('IsPlayIcon',{attrs:{\"id\":row.id}}),_c('IsLike',{attrs:{\"id\":row.id}})]}}])}),_c('el-table-column',{attrs:{\"prop\":\"name\",\"min-width\":\"200\",\"label\":\"音乐标题\"}}),(_vm.status === 'search')?_c('el-table-column',{attrs:{\"width\":\"100px\",\"prop\":\"artists[0].name\",\"label\":\"歌手\"}}):_vm._e(),(_vm.status === 'new')?_c('el-table-column',{attrs:{\"width\":\"100px\",\"prop\":\"song.artists[0].name\",\"label\":\"歌手\"}}):_vm._e(),(_vm.status === 'list')?_c('el-table-column',{attrs:{\"width\":\"100px\",\"prop\":\"ar[0].name\",\"label\":\"歌手\"}}):_vm._e(),(_vm.status === 'search' && _vm.btn)?_c('el-table-column',{attrs:{\"min-width\":\"200px\",\"prop\":\"album.name\",\"label\":\"专辑\"}}):_vm._e(),(_vm.status === 'new' && _vm.btn)?_c('el-table-column',{attrs:{\"min-width\":\"200px\",\"prop\":\"song.album.name\",\"label\":\"专辑\"}}):_vm._e(),(_vm.status === 'list' && _vm.btn)?_c('el-table-column',{attrs:{\"min-width\":\"200px\",\"prop\":\"al.name\",\"label\":\"专辑\"}}):_vm._e(),(_vm.btn)?_c('el-table-column',{attrs:{\"label\":\"操作\",\"width\":\"300px\"},scopedSlots:_vm._u([{key:\"default\",fn:function({ row }){return [_c('el-button',{attrs:{\"type\":\"primary\",\"round\":\"\"},on:{\"click\":function($event){return _vm.onPlay(row.id)}}},[_c('i',{staticClass:\"el-icon-video-play\"}),_vm._v(\"播放 \")]),_c('el-button',{attrs:{\"type\":\"info\",\"round\":\"\"},on:{\"click\":function($event){return _vm.addToList(row.id)}}},[_vm._v(\"添加到列表\")])]}}],null,false,2400387374)}):_vm._e(),(!_vm.btn)?_c('el-table-column',{attrs:{\"width\":\"40\"},scopedSlots:_vm._u([{key:\"default\",fn:function({ row }){return [_c('DeleteIcon',{attrs:{\"id\":row.id}})]}}],null,false,3036415769)}):_vm._e()],1)],1)\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n  <div style=\"width: 100%\">\n    <el-table\n      style=\"font-size: 14px\"\n      @row-dblclick=\"onPlaylistClick\"\n      :data=\"SongsList\"\n      stripe\n      :row-class-name=\"tableRowClassName\"\n    >\n      <!--  -->\n      <el-table-column width=\"34px\">\n        <template #default=\"{ row }\">\n          <IsPlayIcon :id=\"row.id\" />\n          <IsLike :id=\"row.id\"> </IsLike>\n        </template>\n      </el-table-column>\n      <el-table-column prop=\"name\" min-width=\"200\" label=\"音乐标题\">\n      </el-table-column>\n      <!-- 通过父组件川参判断是什么歌单类型 改变获取数据的路径 -->\n      <el-table-column\n        width=\"100px\"\n        v-if=\"status === 'search'\"\n        prop=\"artists[0].name\"\n        label=\"歌手\"\n      >\n      </el-table-column>\n      <el-table-column\n        width=\"100px\"\n        v-if=\"status === 'new'\"\n        prop=\"song.artists[0].name\"\n        label=\"歌手\"\n      >\n      </el-table-column>\n      <el-table-column\n        width=\"100px\"\n        v-if=\"status === 'list'\"\n        prop=\"ar[0].name\"\n        label=\"歌手\"\n      >\n      </el-table-column>\n      <el-table-column\n        min-width=\"200px\"\n        v-if=\"status === 'search' && btn\"\n        prop=\"album.name\"\n        label=\"专辑\"\n      >\n      </el-table-column>\n      <el-table-column\n        min-width=\"200px\"\n        v-if=\"status === 'new' && btn\"\n        prop=\"song.album.name\"\n        label=\"专辑\"\n      >\n      </el-table-column>\n      <el-table-column\n        min-width=\"200px\"\n        v-if=\"status === 'list' && btn\"\n        prop=\"al.name\"\n        label=\"专辑\"\n      >\n      </el-table-column>\n      <el-table-column v-if=\"btn\" label=\"操作\" width=\"300px\">\n        <template #default=\"{ row }\">\n          <el-button type=\"primary\" @click=\"onPlay(row.id)\" round>\n            <i class=\"el-icon-video-play\"></i>播放\n          </el-button>\n          <el-button type=\"info\" @click=\"addToList(row.id)\" round\n            >添加到列表</el-button\n          >\n        </template>\n      </el-table-column>\n      <el-table-column v-if=\"!btn\" width=\"40\">\n        <template #default=\"{ row }\">\n          <DeleteIcon :id=\"row.id\" />\n        </template>\n      </el-table-column>\n    </el-table>\n  </div>\n</template>\n\n<script>\nimport { mapMutations, mapActions, mapState } from 'vuex'\n//  复用歌曲表格组件\nexport default {\n  // 需要引用者传入songslist歌单列表\n  props: {\n    SongsList: {\n      type: Array,\n      required: true,\n      default: () => []\n    },\n    // 父组件传入歌单类型，从而获取不同歌单类型的信息\n    status: {\n      type: String,\n      required: true\n    },\n    btn: {\n      type: Boolean,\n      default: true\n    }\n  },\n  data () {\n    return {\n      // newarr: []\n    }\n  },\n  methods: {\n    ...mapActions('play', ['getCurrentPlay', 'addToList']),\n    // 从vuex中获取改变播放音乐id的方法\n    ...mapMutations('play', ['changePlayId', 'addPlayList']),\n    // 点击改变播放音乐的id\n    // 播放\n    onPlay (playid) {\n      console.log('我要播放', playid)\n      this.changePlayId(playid)\n    },\n    // 双击事件\n    onPlaylistClick (row, column, event) {\n      // console.log(row, column, event)\n      this.changePlayId(row.id)\n    },\n    // 当前播放的音乐样式\n    tableRowClassName ({ row, rowIndex }) {\n      // console.log(row, rowIndex)\n      if (row.id === this.nowPlay.playId) {\n        return 'success-row'\n      } else {\n        return ''\n      }\n    }\n  },\n  computed: {\n    ...mapState('play', ['nowPlay', 'playList'])\n  }\n}\n</script>\n\n<style lang=\"less\" scoped>\n.playing {\n  display: block;\n}\n.el-icon-video-play {\n  margin-right: 7px;\n}\n.el-table .warning-row {\n  background: oldlace;\n}\n\n/deep/ .el-table .success-row {\n  color: #ec4141;\n  // background: #f0f9eb;\n}\n</style>\n","import mod from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./SongsTable.vue?vue&type=script&lang=js\"; export default mod; export * from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./SongsTable.vue?vue&type=script&lang=js\"","import { render, staticRenderFns } from \"./SongsTable.vue?vue&type=template&id=395ef2a0&scoped=true\"\nimport script from \"./SongsTable.vue?vue&type=script&lang=js\"\nexport * from \"./SongsTable.vue?vue&type=script&lang=js\"\nimport style0 from \"./SongsTable.vue?vue&type=style&index=0&id=395ef2a0&prod&lang=less&scoped=true\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"395ef2a0\",\n  null\n  \n)\n\nexport default component.exports","var render = function render(){var _vm=this,_c=_vm._self._c;return (_vm.seeSongsList !== null)?_c('div',{staticClass:\"main\"},[_c('div',{staticClass:\"head\"},[_c('div',{staticClass:\"pic\"},[_c('img',{attrs:{\"src\":_vm.seeSongsList.coverImgUrl,\"alt\":\"\"}})]),_c('div',{staticClass:\"info\"},[_c('h3',[_vm._v(_vm._s(_vm.seeSongsList.name))]),_c('div',{staticClass:\"user\"},[_c('el-avatar',{attrs:{\"src\":_vm.seeSongsList.creator.avatarUrl}}),_c('p',[_vm._v(_vm._s(_vm.seeSongsList.creator.nickname))])],1),_c('p',[_vm._v(\" 标签: \"),_vm._l((_vm.seeSongsList.tags),function(item,i){return _c('el-tag',{key:i,staticClass:\"tags\"},[_vm._v(_vm._s(item))])})],2),_c('p',{staticClass:\"description\"},[_vm._v(\"简介:\"+_vm._s(_vm.seeSongsList.description))]),_c('div',{staticClass:\"btn\"},[_c('el-button',{attrs:{\"type\":\"primary\",\"round\":\"\"},on:{\"click\":_vm.addAlltoList}},[_vm._v(\"播放全部\")]),_c('el-button',{attrs:{\"type\":\"info\",\"disabled\":_vm.seeSongsList.userId === _vm.userInfo.userId || !_vm.isLogin,\"round\":\"\"},on:{\"click\":function($event){return _vm.subscribeSongList(_vm.seeSongsList.subscribed, _vm.seeSongsList.id)}}},[_vm._v(_vm._s(_vm.seeSongsList.subscribed ? \"已收藏\" : \"收藏\"))])],1)])]),_c('p',{staticClass:\"title\"},[_vm._v(\"歌曲列表\")]),_c('SongsTable',{attrs:{\"status\":\"list\",\"SongsList\":_vm.seeSongsList.tracks}})],1):_vm._e()\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n  <!-- <el-main > -->\n  <div v-if=\"seeSongsList !== null\" class=\"main\">\n    <div class=\"head\">\n      <div class=\"pic\"><img :src=\"seeSongsList.coverImgUrl\" alt=\"\" /></div>\n      <div class=\"info\">\n        <h3>{{ seeSongsList.name }}</h3>\n        <div class=\"user\">\n          <el-avatar :src=\"seeSongsList.creator.avatarUrl\"></el-avatar>\n          <p>{{ seeSongsList.creator.nickname }}</p>\n        </div>\n\n        <p>\n          标签:\n          <el-tag\n            class=\"tags\"\n            v-for=\"(item, i) in seeSongsList.tags\"\n            :key=\"i\"\n            >{{ item }}</el-tag\n          >\n        </p>\n        <p class=\"description\">简介:{{ seeSongsList.description }}</p>\n        <div class=\"btn\">\n          <el-button type=\"primary\" @click=\"addAlltoList\" round\n            >播放全部</el-button\n          >\n          <el-button\n            @click=\"subscribeSongList(seeSongsList.subscribed, seeSongsList.id)\"\n            type=\"info\"\n            :disabled=\"seeSongsList.userId === userInfo.userId || !isLogin\"\n            round\n            >{{ seeSongsList.subscribed ? \"已收藏\" : \"收藏\" }}</el-button\n          >\n        </div>\n      </div>\n    </div>\n    <p class=\"title\">歌曲列表</p>\n    <!-- 通过作用域插槽，获取row数据，实现一些功能（编辑，拿到id跳转数据详情页；格式化数据） -->\n    <!-- <template>\n      <el-table :data=\"seeSongsList.tracks\" stripe style=\"width: 100%\">\n        <el-table-column prop=\"\" width=\"50\"> </el-table-column>\n        <el-table-column prop=\"name\" label=\"音乐标题\"> </el-table-column>\n        <el-table-column prop=\"ar[0].name\" label=\"歌手\"> </el-table-column>\n        <el-table-column prop=\"al.name\" label=\"专辑\"> </el-table-column>\n        <el-table-column prop=\"date\" label=\"操作\" width=\"300\">\n          <template #default=\"{ row }\">\n            <el-button type=\"primary\" @click=\"onPlay(row.id)\" round\n              >播放音乐{{ row.id }}\n            </el-button>\n            <el-button type=\"success\" disabled round>添加到歌单</el-button>\n          </template>\n        </el-table-column>\n      </el-table>\n    </template> -->\n    <SongsTable status=\"list\" :SongsList=\"seeSongsList.tracks\" />\n  </div>\n  <!-- </el-main> -->\n</template>\n\n<script>\n//  引入歌单表格组件进行复用\nimport SongsTable from '@/components/SongsTable.vue'\n// 引入vuex中的方法\nimport { mapMutations, mapState, mapActions, mapGetters } from 'vuex'\n// 引入获取歌单信息的接口\nimport { GetSongsListAPI, subscribeSongListAPI } from '@/api/mainapi'\nexport default {\n  // 监听id变化重新发送请求获取最新歌单，清空原歌单数据\n  watch: {\n    id () {\n      this.seeSongsList = null\n      this.getSongsList()\n    }\n  },\n  // 获取歌单信息\n  created () {\n    // console.log(this.isLoginh)\n    // console.log(this.id)\n    this.getSongsList()\n  },\n  data () {\n    return {\n      //  保存歌单列表\n      seeSongsList: null\n    }\n  },\n  // 接受父组件传送的id\n  props: ['id'],\n  methods: {\n    // 改变正在播放的歌曲id\n    ...mapMutations('play', ['changePlayId', 'addPlayList', 'clearPlayList']),\n    ...mapActions('user', ['initUserPlayList']),\n    // 获取歌单列表的函数\n    async getSongsList () {\n      const { data: res } = await GetSongsListAPI(this.id)\n      // console.log(res)\n      if (res.code === 200) {\n        // console.log(res)\n        console.log('歌单列表', res.playlist)\n        this.seeSongsList = res.playlist\n        // console.log(this.seeSongsList)\n      }\n    },\n    // 点击按钮播放id音乐\n    onPlay (palyid) {\n      this.changePlayId(palyid)\n    },\n    addAlltoList () {\n      // 如果当前播放列表有数据 进行提示\n      if (this.playList.length > 0) {\n        this.$confirm('全部播放替换掉当前播放歌单', '提示').then(() => {\n          this.clearPlayList() // 清空当前播放列表\n          this.seeSongsList.tracks.forEach(item => {\n            this.addPlayList(item)\n          })\n          this.changePlayId(this.seeSongsList.tracks[0].id)\n        }).catch(console.log)\n      } else {\n        this.seeSongsList.tracks.forEach(item => {\n          this.addPlayList(item)\n        })\n        this.changePlayId(this.seeSongsList.tracks[0].id)\n      }\n    },\n    subscribeSongList (state, id) {\n      // 如果值为真发送取消收藏请求，否则发送收藏请求\n      const a = state ? 2 : 1\n      if (state) {\n        this.$confirm('确认取消收藏歌单吗?', '提示').then(async () => {\n          const res = await subscribeSongListAPI(id, a)\n          if (res.data.code === 200) {\n            this.$message.success('取消收藏成功')\n            this.seeSongsList.subscribed = false\n            this.initUserPlayList(this.userInfo.userId)\n            console.log(res)\n          }\n        }).catch(console.log)\n      } else {\n        this.$confirm('确认收藏歌单吗?', '提示').then(async () => {\n          const res = await subscribeSongListAPI(id, a)\n          if (res.data.code === 200) {\n            this.$message.success('收藏成功')\n            this.seeSongsList.subscribed = true\n            this.initUserPlayList(this.userInfo.userId)\n            console.log(res)\n          }\n        }).catch(console.log)\n      }\n    }\n  },\n  // 注册歌单表格组件准备复用\n  components: {\n    SongsTable\n  },\n  computed: {\n    ...mapGetters('user', ['isLogin']),\n    ...mapState('play', ['playList']),\n    ...mapState('user', ['userInfo'])\n  }\n  // 页面加载自动获取歌单信息\n\n}\n</script>\n\n<style lang=\"less\" scoped>\n.box {\n  float: right;\n}\n// .main {\n//   padding: 0 30px;\n//   position: absolute;\n//   left: 300px;\n//   right: 0px;\n//   top: 60px;\n//   bottom: 0px;\n//   padding-bottom: 60px;\n// }\n.title {\n  padding: 0.266667rem 0.24rem;\n  margin: 10px 0;\n  background-color: #eee;\n  color: #333;\n  font-size: 15px;\n}\n.time {\n  font-size: 13px;\n  color: #999;\n}\n\n.bottom {\n  margin-top: 13px;\n  line-height: 12px;\n}\n\n.button {\n  padding: 0;\n  float: right;\n}\n\n.image {\n  width: 100%;\n  display: block;\n}\n\n.clearfix:before,\n.clearfix:after {\n  display: table;\n  content: \"\";\n}\n\n.clearfix:after {\n  clear: both;\n}\n.head {\n  display: flex;\n  justify-content: space-between;\n  padding: 10px 20px;\n  .pic {\n    margin-right: 20px;\n    img {\n      width: 200px;\n    }\n  }\n  .info {\n    flex: 1;\n    .user {\n      margin-top: 10px;\n      display: flex;\n      align-items: center;\n      p {\n        margin-left: 20px;\n      }\n    }\n  }\n  .btn {\n    margin-top: 10px;\n  }\n  .tags {\n    margin-right: 10px;\n  }\n  .description {\n    display: -webkit-box;\n    -webkit-box-orient: vertical;\n    -webkit-line-clamp: 2;\n    overflow: hidden;\n  }\n}\n</style>\n","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./SongsList.vue?vue&type=script&lang=js\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./SongsList.vue?vue&type=script&lang=js\"","import { render, staticRenderFns } from \"./SongsList.vue?vue&type=template&id=c064868c&scoped=true\"\nimport script from \"./SongsList.vue?vue&type=script&lang=js\"\nexport * from \"./SongsList.vue?vue&type=script&lang=js\"\nimport style0 from \"./SongsList.vue?vue&type=style&index=0&id=c064868c&prod&lang=less&scoped=true\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"c064868c\",\n  null\n  \n)\n\nexport default component.exports","export * from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--11-oneOf-1-0!../../node_modules/css-loader/dist/cjs.js??ref--11-oneOf-1-1!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--11-oneOf-1-2!../../node_modules/less-loader/dist/cjs.js??ref--11-oneOf-1-3!../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./SongsTable.vue?vue&type=style&index=0&id=395ef2a0&prod&lang=less&scoped=true\""],"sourceRoot":""}